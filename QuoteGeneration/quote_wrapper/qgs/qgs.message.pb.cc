// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qgs.message.proto

#include "qgs.message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_qgs_2emessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qgs_2emessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UUID;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qgs_2emessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Request_GetQuoteRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qgs_2emessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Response_GetQuoteResponse;
}  // namespace protobuf_qgs_2emessage_2eproto
namespace qgs {
namespace message {
class UUIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UUID>
      _instance;
} _UUID_default_instance_;
class Request_GetQuoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_GetQuoteRequest>
      _instance;
} _Request_GetQuoteRequest_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
  const ::qgs::message::Request_GetQuoteRequest* getquoterequest_;
} _Request_default_instance_;
class Response_GetQuoteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_GetQuoteResponse>
      _instance;
} _Response_GetQuoteResponse_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
  const ::qgs::message::Response_GetQuoteResponse* getquoteresponse_;
} _Response_default_instance_;
}  // namespace message
}  // namespace qgs
namespace protobuf_qgs_2emessage_2eproto {
static void InitDefaultsUUID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qgs::message::_UUID_default_instance_;
    new (ptr) ::qgs::message::UUID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qgs::message::UUID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UUID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUUID}, {}};

static void InitDefaultsRequest_GetQuoteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qgs::message::_Request_GetQuoteRequest_default_instance_;
    new (ptr) ::qgs::message::Request_GetQuoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qgs::message::Request_GetQuoteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Request_GetQuoteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRequest_GetQuoteRequest}, {
      &protobuf_qgs_2emessage_2eproto::scc_info_UUID.base,}};

static void InitDefaultsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qgs::message::_Request_default_instance_;
    new (ptr) ::qgs::message::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qgs::message::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRequest}, {
      &protobuf_qgs_2emessage_2eproto::scc_info_Request_GetQuoteRequest.base,}};

static void InitDefaultsResponse_GetQuoteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qgs::message::_Response_GetQuoteResponse_default_instance_;
    new (ptr) ::qgs::message::Response_GetQuoteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qgs::message::Response_GetQuoteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Response_GetQuoteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResponse_GetQuoteResponse}, {
      &protobuf_qgs_2emessage_2eproto::scc_info_UUID.base,}};

static void InitDefaultsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qgs::message::_Response_default_instance_;
    new (ptr) ::qgs::message::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qgs::message::Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResponse}, {
      &protobuf_qgs_2emessage_2eproto::scc_info_Response_GetQuoteResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UUID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_GetQuoteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_GetQuoteResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response.base);
}

}  // namespace protobuf_qgs_2emessage_2eproto
namespace qgs {
namespace message {

// ===================================================================

void UUID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UUID::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UUID::UUID()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qgs_2emessage_2eproto::scc_info_UUID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qgs.message.UUID)
}
UUID::UUID(const UUID& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:qgs.message.UUID)
}

void UUID::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UUID::~UUID() {
  // @@protoc_insertion_point(destructor:qgs.message.UUID)
  SharedDtor();
}

void UUID::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UUID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UUID& UUID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qgs_2emessage_2eproto::scc_info_UUID.base);
  return *internal_default_instance();
}


void UUID::Clear() {
// @@protoc_insertion_point(message_clear_start:qgs.message.UUID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    value_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UUID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:qgs.message.UUID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qgs.message.UUID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qgs.message.UUID)
  return false;
#undef DO_
}

void UUID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qgs.message.UUID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:qgs.message.UUID)
}

size_t UUID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qgs.message.UUID)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required bytes value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UUID::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const UUID*>(&from));
}

void UUID::MergeFrom(const UUID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qgs.message.UUID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_has_value();
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void UUID::CopyFrom(const UUID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qgs.message.UUID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UUID::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UUID::Swap(UUID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UUID::InternalSwap(UUID* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string UUID::GetTypeName() const {
  return "qgs.message.UUID";
}


// ===================================================================

void Request_GetQuoteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetQuoteRequest::kReportFieldNumber;
const int Request_GetQuoteRequest::kIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetQuoteRequest::Request_GetQuoteRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qgs_2emessage_2eproto::scc_info_Request_GetQuoteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qgs.message.Request.GetQuoteRequest)
}
Request_GetQuoteRequest::Request_GetQuoteRequest(const Request_GetQuoteRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      id_list_(from.id_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  report_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_report()) {
    report_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_);
  }
  // @@protoc_insertion_point(copy_constructor:qgs.message.Request.GetQuoteRequest)
}

void Request_GetQuoteRequest::SharedCtor() {
  report_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Request_GetQuoteRequest::~Request_GetQuoteRequest() {
  // @@protoc_insertion_point(destructor:qgs.message.Request.GetQuoteRequest)
  SharedDtor();
}

void Request_GetQuoteRequest::SharedDtor() {
  report_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request_GetQuoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Request_GetQuoteRequest& Request_GetQuoteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qgs_2emessage_2eproto::scc_info_Request_GetQuoteRequest.base);
  return *internal_default_instance();
}


void Request_GetQuoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qgs.message.Request.GetQuoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    report_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_GetQuoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:qgs.message.Request.GetQuoteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes report = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_report()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .qgs.message.UUID id_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_id_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qgs.message.Request.GetQuoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qgs.message.Request.GetQuoteRequest)
  return false;
#undef DO_
}

void Request_GetQuoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qgs.message.Request.GetQuoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes report = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->report(), output);
  }

  // repeated .qgs.message.UUID id_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->id_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->id_list(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:qgs.message.Request.GetQuoteRequest)
}

size_t Request_GetQuoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qgs.message.Request.GetQuoteRequest)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required bytes report = 1;
  if (has_report()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->report());
  }
  // repeated .qgs.message.UUID id_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->id_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->id_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_GetQuoteRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_GetQuoteRequest*>(&from));
}

void Request_GetQuoteRequest::MergeFrom(const Request_GetQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qgs.message.Request.GetQuoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  id_list_.MergeFrom(from.id_list_);
  if (from.has_report()) {
    set_has_report();
    report_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_);
  }
}

void Request_GetQuoteRequest::CopyFrom(const Request_GetQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qgs.message.Request.GetQuoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetQuoteRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->id_list())) return false;
  return true;
}

void Request_GetQuoteRequest::Swap(Request_GetQuoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetQuoteRequest::InternalSwap(Request_GetQuoteRequest* other) {
  using std::swap;
  CastToBase(&id_list_)->InternalSwap(CastToBase(&other->id_list_));
  report_.Swap(&other->report_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Request_GetQuoteRequest::GetTypeName() const {
  return "qgs.message.Request.GetQuoteRequest";
}


// ===================================================================

void Request::InitAsDefaultInstance() {
}
void Request::set_allocated_getquoterequest(::qgs::message::Request_GetQuoteRequest* getquoterequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (getquoterequest) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getquoterequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getquoterequest, submessage_arena);
    }
    set_has_getquoterequest();
    msg_.getquoterequest_ = getquoterequest;
  }
  // @@protoc_insertion_point(field_set_allocated:qgs.message.Request.getQuoteRequest)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kTypeFieldNumber;
const int Request::kGetQuoteRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qgs_2emessage_2eproto::scc_info_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qgs.message.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  clear_has_msg();
  switch (from.msg_case()) {
    case kGetQuoteRequest: {
      mutable_getquoterequest()->::qgs::message::Request_GetQuoteRequest::MergeFrom(from.getquoterequest());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qgs.message.Request)
}

void Request::SharedCtor() {
  type_ = 0u;
  clear_has_msg();
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:qgs.message.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qgs_2emessage_2eproto::scc_info_Request.base);
  return *internal_default_instance();
}


void Request::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:qgs.message.Request)
  switch (msg_case()) {
    case kGetQuoteRequest: {
      delete msg_.getquoterequest_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:qgs.message.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0u;
  clear_msg();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:qgs.message.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .qgs.message.Request.GetQuoteRequest getQuoteRequest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getquoterequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qgs.message.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qgs.message.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qgs.message.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional .qgs.message.Request.GetQuoteRequest getQuoteRequest = 2;
  if (has_getquoterequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_getquoterequest(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:qgs.message.Request)
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qgs.message.Request)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required uint32 type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }
  switch (msg_case()) {
    // optional .qgs.message.Request.GetQuoteRequest getQuoteRequest = 2;
    case kGetQuoteRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.getquoterequest_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request*>(&from));
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qgs.message.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    set_type(from.type());
  }
  switch (from.msg_case()) {
    case kGetQuoteRequest: {
      mutable_getquoterequest()->::qgs::message::Request_GetQuoteRequest::MergeFrom(from.getquoterequest());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qgs.message.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  switch (msg_case()) {
    case kGetQuoteRequest: {
      if (has_getquoterequest()) {
        if (!this->getquoterequest().IsInitialized()) return false;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Request::GetTypeName() const {
  return "qgs.message.Request";
}


// ===================================================================

void Response_GetQuoteResponse::InitAsDefaultInstance() {
  ::qgs::message::_Response_GetQuoteResponse_default_instance_._instance.get_mutable()->selected_id_ = const_cast< ::qgs::message::UUID*>(
      ::qgs::message::UUID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetQuoteResponse::kErrorCodeFieldNumber;
const int Response_GetQuoteResponse::kSelectedIdFieldNumber;
const int Response_GetQuoteResponse::kQuoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetQuoteResponse::Response_GetQuoteResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qgs_2emessage_2eproto::scc_info_Response_GetQuoteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qgs.message.Response.GetQuoteResponse)
}
Response_GetQuoteResponse::Response_GetQuoteResponse(const Response_GetQuoteResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quote_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_quote()) {
    quote_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_);
  }
  if (from.has_selected_id()) {
    selected_id_ = new ::qgs::message::UUID(*from.selected_id_);
  } else {
    selected_id_ = NULL;
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:qgs.message.Response.GetQuoteResponse)
}

void Response_GetQuoteResponse::SharedCtor() {
  quote_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selected_id_ = NULL;
  error_code_ = 1u;
}

Response_GetQuoteResponse::~Response_GetQuoteResponse() {
  // @@protoc_insertion_point(destructor:qgs.message.Response.GetQuoteResponse)
  SharedDtor();
}

void Response_GetQuoteResponse::SharedDtor() {
  quote_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete selected_id_;
}

void Response_GetQuoteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Response_GetQuoteResponse& Response_GetQuoteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qgs_2emessage_2eproto::scc_info_Response_GetQuoteResponse.base);
  return *internal_default_instance();
}


void Response_GetQuoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qgs.message.Response.GetQuoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      quote_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(selected_id_ != NULL);
      selected_id_->Clear();
    }
    error_code_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_GetQuoteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:qgs.message.Response.GetQuoteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error_code = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_error_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .qgs.message.UUID selected_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_selected_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes quote = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_quote()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qgs.message.Response.GetQuoteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qgs.message.Response.GetQuoteResponse)
  return false;
#undef DO_
}

void Response_GetQuoteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qgs.message.Response.GetQuoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 error_code = 1 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  // optional .qgs.message.UUID selected_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_selected_id(), output);
  }

  // optional bytes quote = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->quote(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:qgs.message.Response.GetQuoteResponse)
}

size_t Response_GetQuoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qgs.message.Response.GetQuoteResponse)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required uint32 error_code = 1 [default = 1];
  if (has_error_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error_code());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes quote = 3;
    if (has_quote()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->quote());
    }

    // optional .qgs.message.UUID selected_id = 2;
    if (has_selected_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *selected_id_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_GetQuoteResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_GetQuoteResponse*>(&from));
}

void Response_GetQuoteResponse::MergeFrom(const Response_GetQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qgs.message.Response.GetQuoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_quote();
      quote_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_selected_id()->::qgs::message::UUID::MergeFrom(from.selected_id());
    }
    if (cached_has_bits & 0x00000004u) {
      error_code_ = from.error_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response_GetQuoteResponse::CopyFrom(const Response_GetQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qgs.message.Response.GetQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetQuoteResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_selected_id()) {
    if (!this->selected_id_->IsInitialized()) return false;
  }
  return true;
}

void Response_GetQuoteResponse::Swap(Response_GetQuoteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetQuoteResponse::InternalSwap(Response_GetQuoteResponse* other) {
  using std::swap;
  quote_.Swap(&other->quote_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(selected_id_, other->selected_id_);
  swap(error_code_, other->error_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Response_GetQuoteResponse::GetTypeName() const {
  return "qgs.message.Response.GetQuoteResponse";
}


// ===================================================================

void Response::InitAsDefaultInstance() {
}
void Response::set_allocated_getquoteresponse(::qgs::message::Response_GetQuoteResponse* getquoteresponse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (getquoteresponse) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getquoteresponse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getquoteresponse, submessage_arena);
    }
    set_has_getquoteresponse();
    msg_.getquoteresponse_ = getquoteresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:qgs.message.Response.getQuoteResponse)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kTypeFieldNumber;
const int Response::kGetQuoteResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qgs_2emessage_2eproto::scc_info_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qgs.message.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  clear_has_msg();
  switch (from.msg_case()) {
    case kGetQuoteResponse: {
      mutable_getquoteresponse()->::qgs::message::Response_GetQuoteResponse::MergeFrom(from.getquoteresponse());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qgs.message.Response)
}

void Response::SharedCtor() {
  type_ = 0u;
  clear_has_msg();
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:qgs.message.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Response& Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qgs_2emessage_2eproto::scc_info_Response.base);
  return *internal_default_instance();
}


void Response::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:qgs.message.Response)
  switch (msg_case()) {
    case kGetQuoteResponse: {
      delete msg_.getquoteresponse_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:qgs.message.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0u;
  clear_msg();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:qgs.message.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .qgs.message.Response.GetQuoteResponse getQuoteResponse = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getquoteresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qgs.message.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qgs.message.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qgs.message.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional .qgs.message.Response.GetQuoteResponse getQuoteResponse = 2;
  if (has_getquoteresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_getquoteresponse(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:qgs.message.Response)
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qgs.message.Response)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required uint32 type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }
  switch (msg_case()) {
    // optional .qgs.message.Response.GetQuoteResponse getQuoteResponse = 2;
    case kGetQuoteResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.getquoteresponse_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response*>(&from));
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qgs.message.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    set_type(from.type());
  }
  switch (from.msg_case()) {
    case kGetQuoteResponse: {
      mutable_getquoteresponse()->::qgs::message::Response_GetQuoteResponse::MergeFrom(from.getquoteresponse());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qgs.message.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  switch (msg_case()) {
    case kGetQuoteResponse: {
      if (has_getquoteresponse()) {
        if (!this->getquoteresponse().IsInitialized()) return false;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Response::GetTypeName() const {
  return "qgs.message.Response";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace message
}  // namespace qgs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qgs::message::UUID* Arena::CreateMaybeMessage< ::qgs::message::UUID >(Arena* arena) {
  return Arena::CreateInternal< ::qgs::message::UUID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qgs::message::Request_GetQuoteRequest* Arena::CreateMaybeMessage< ::qgs::message::Request_GetQuoteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::qgs::message::Request_GetQuoteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qgs::message::Request* Arena::CreateMaybeMessage< ::qgs::message::Request >(Arena* arena) {
  return Arena::CreateInternal< ::qgs::message::Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qgs::message::Response_GetQuoteResponse* Arena::CreateMaybeMessage< ::qgs::message::Response_GetQuoteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::qgs::message::Response_GetQuoteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qgs::message::Response* Arena::CreateMaybeMessage< ::qgs::message::Response >(Arena* arena) {
  return Arena::CreateInternal< ::qgs::message::Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qgs.message.proto

#ifndef PROTOBUF_INCLUDED_qgs_2emessage_2eproto
#define PROTOBUF_INCLUDED_qgs_2emessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_qgs_2emessage_2eproto 

namespace protobuf_qgs_2emessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_qgs_2emessage_2eproto
namespace qgs {
namespace message {
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Request_GetQuoteRequest;
class Request_GetQuoteRequestDefaultTypeInternal;
extern Request_GetQuoteRequestDefaultTypeInternal _Request_GetQuoteRequest_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class Response_GetQuoteResponse;
class Response_GetQuoteResponseDefaultTypeInternal;
extern Response_GetQuoteResponseDefaultTypeInternal _Response_GetQuoteResponse_default_instance_;
class UUID;
class UUIDDefaultTypeInternal;
extern UUIDDefaultTypeInternal _UUID_default_instance_;
}  // namespace message
}  // namespace qgs
namespace google {
namespace protobuf {
template<> ::qgs::message::Request* Arena::CreateMaybeMessage<::qgs::message::Request>(Arena*);
template<> ::qgs::message::Request_GetQuoteRequest* Arena::CreateMaybeMessage<::qgs::message::Request_GetQuoteRequest>(Arena*);
template<> ::qgs::message::Response* Arena::CreateMaybeMessage<::qgs::message::Response>(Arena*);
template<> ::qgs::message::Response_GetQuoteResponse* Arena::CreateMaybeMessage<::qgs::message::Response_GetQuoteResponse>(Arena*);
template<> ::qgs::message::UUID* Arena::CreateMaybeMessage<::qgs::message::UUID>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace qgs {
namespace message {

// ===================================================================

class UUID : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:qgs.message.UUID) */ {
 public:
  UUID();
  virtual ~UUID();

  UUID(const UUID& from);

  inline UUID& operator=(const UUID& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UUID(UUID&& from) noexcept
    : UUID() {
    *this = ::std::move(from);
  }

  inline UUID& operator=(UUID&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const UUID& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UUID* internal_default_instance() {
    return reinterpret_cast<const UUID*>(
               &_UUID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(UUID* other);
  friend void swap(UUID& a, UUID& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UUID* New() const final {
    return CreateMaybeMessage<UUID>(NULL);
  }

  UUID* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UUID>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const UUID& from);
  void MergeFrom(const UUID& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UUID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:qgs.message.UUID)
 private:
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::protobuf_qgs_2emessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_GetQuoteRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:qgs.message.Request.GetQuoteRequest) */ {
 public:
  Request_GetQuoteRequest();
  virtual ~Request_GetQuoteRequest();

  Request_GetQuoteRequest(const Request_GetQuoteRequest& from);

  inline Request_GetQuoteRequest& operator=(const Request_GetQuoteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_GetQuoteRequest(Request_GetQuoteRequest&& from) noexcept
    : Request_GetQuoteRequest() {
    *this = ::std::move(from);
  }

  inline Request_GetQuoteRequest& operator=(Request_GetQuoteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const Request_GetQuoteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_GetQuoteRequest* internal_default_instance() {
    return reinterpret_cast<const Request_GetQuoteRequest*>(
               &_Request_GetQuoteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Request_GetQuoteRequest* other);
  friend void swap(Request_GetQuoteRequest& a, Request_GetQuoteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_GetQuoteRequest* New() const final {
    return CreateMaybeMessage<Request_GetQuoteRequest>(NULL);
  }

  Request_GetQuoteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_GetQuoteRequest>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Request_GetQuoteRequest& from);
  void MergeFrom(const Request_GetQuoteRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_GetQuoteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qgs.message.UUID id_list = 2;
  int id_list_size() const;
  void clear_id_list();
  static const int kIdListFieldNumber = 2;
  ::qgs::message::UUID* mutable_id_list(int index);
  ::google::protobuf::RepeatedPtrField< ::qgs::message::UUID >*
      mutable_id_list();
  const ::qgs::message::UUID& id_list(int index) const;
  ::qgs::message::UUID* add_id_list();
  const ::google::protobuf::RepeatedPtrField< ::qgs::message::UUID >&
      id_list() const;

  // required bytes report = 1;
  bool has_report() const;
  void clear_report();
  static const int kReportFieldNumber = 1;
  const ::std::string& report() const;
  void set_report(const ::std::string& value);
  #if LANG_CXX11
  void set_report(::std::string&& value);
  #endif
  void set_report(const char* value);
  void set_report(const void* value, size_t size);
  ::std::string* mutable_report();
  ::std::string* release_report();
  void set_allocated_report(::std::string* report);

  // @@protoc_insertion_point(class_scope:qgs.message.Request.GetQuoteRequest)
 private:
  void set_has_report();
  void clear_has_report();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::qgs::message::UUID > id_list_;
  ::google::protobuf::internal::ArenaStringPtr report_;
  friend struct ::protobuf_qgs_2emessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:qgs.message.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const Request& default_instance();

  enum MsgCase {
    kGetQuoteRequest = 2,
    MSG_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const final {
    return CreateMaybeMessage<Request>(NULL);
  }

  Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Request_GetQuoteRequest GetQuoteRequest;

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional .qgs.message.Request.GetQuoteRequest getQuoteRequest = 2;
  bool has_getquoterequest() const;
  void clear_getquoterequest();
  static const int kGetQuoteRequestFieldNumber = 2;
  private:
  const ::qgs::message::Request_GetQuoteRequest& _internal_getquoterequest() const;
  public:
  const ::qgs::message::Request_GetQuoteRequest& getquoterequest() const;
  ::qgs::message::Request_GetQuoteRequest* release_getquoterequest();
  ::qgs::message::Request_GetQuoteRequest* mutable_getquoterequest();
  void set_allocated_getquoterequest(::qgs::message::Request_GetQuoteRequest* getquoterequest);

  void clear_msg();
  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:qgs.message.Request)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_getquoterequest();

  inline bool has_msg() const;
  inline void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 type_;
  union MsgUnion {
    MsgUnion() {}
    ::qgs::message::Request_GetQuoteRequest* getquoterequest_;
  } msg_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_qgs_2emessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_GetQuoteResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:qgs.message.Response.GetQuoteResponse) */ {
 public:
  Response_GetQuoteResponse();
  virtual ~Response_GetQuoteResponse();

  Response_GetQuoteResponse(const Response_GetQuoteResponse& from);

  inline Response_GetQuoteResponse& operator=(const Response_GetQuoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_GetQuoteResponse(Response_GetQuoteResponse&& from) noexcept
    : Response_GetQuoteResponse() {
    *this = ::std::move(from);
  }

  inline Response_GetQuoteResponse& operator=(Response_GetQuoteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const Response_GetQuoteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_GetQuoteResponse* internal_default_instance() {
    return reinterpret_cast<const Response_GetQuoteResponse*>(
               &_Response_GetQuoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Response_GetQuoteResponse* other);
  friend void swap(Response_GetQuoteResponse& a, Response_GetQuoteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_GetQuoteResponse* New() const final {
    return CreateMaybeMessage<Response_GetQuoteResponse>(NULL);
  }

  Response_GetQuoteResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_GetQuoteResponse>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Response_GetQuoteResponse& from);
  void MergeFrom(const Response_GetQuoteResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_GetQuoteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes quote = 3;
  bool has_quote() const;
  void clear_quote();
  static const int kQuoteFieldNumber = 3;
  const ::std::string& quote() const;
  void set_quote(const ::std::string& value);
  #if LANG_CXX11
  void set_quote(::std::string&& value);
  #endif
  void set_quote(const char* value);
  void set_quote(const void* value, size_t size);
  ::std::string* mutable_quote();
  ::std::string* release_quote();
  void set_allocated_quote(::std::string* quote);

  // optional .qgs.message.UUID selected_id = 2;
  bool has_selected_id() const;
  void clear_selected_id();
  static const int kSelectedIdFieldNumber = 2;
  private:
  const ::qgs::message::UUID& _internal_selected_id() const;
  public:
  const ::qgs::message::UUID& selected_id() const;
  ::qgs::message::UUID* release_selected_id();
  ::qgs::message::UUID* mutable_selected_id();
  void set_allocated_selected_id(::qgs::message::UUID* selected_id);

  // required uint32 error_code = 1 [default = 1];
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 error_code() const;
  void set_error_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qgs.message.Response.GetQuoteResponse)
 private:
  void set_has_error_code();
  void clear_has_error_code();
  void set_has_selected_id();
  void clear_has_selected_id();
  void set_has_quote();
  void clear_has_quote();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr quote_;
  ::qgs::message::UUID* selected_id_;
  ::google::protobuf::uint32 error_code_;
  friend struct ::protobuf_qgs_2emessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:qgs.message.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const Response& default_instance();

  enum MsgCase {
    kGetQuoteResponse = 2,
    MSG_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const final {
    return CreateMaybeMessage<Response>(NULL);
  }

  Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Response_GetQuoteResponse GetQuoteResponse;

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional .qgs.message.Response.GetQuoteResponse getQuoteResponse = 2;
  bool has_getquoteresponse() const;
  void clear_getquoteresponse();
  static const int kGetQuoteResponseFieldNumber = 2;
  private:
  const ::qgs::message::Response_GetQuoteResponse& _internal_getquoteresponse() const;
  public:
  const ::qgs::message::Response_GetQuoteResponse& getquoteresponse() const;
  ::qgs::message::Response_GetQuoteResponse* release_getquoteresponse();
  ::qgs::message::Response_GetQuoteResponse* mutable_getquoteresponse();
  void set_allocated_getquoteresponse(::qgs::message::Response_GetQuoteResponse* getquoteresponse);

  void clear_msg();
  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:qgs.message.Response)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_getquoteresponse();

  inline bool has_msg() const;
  inline void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 type_;
  union MsgUnion {
    MsgUnion() {}
    ::qgs::message::Response_GetQuoteResponse* getquoteresponse_;
  } msg_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_qgs_2emessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UUID

// required bytes value = 1;
inline bool UUID::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UUID::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UUID::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UUID::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& UUID::value() const {
  // @@protoc_insertion_point(field_get:qgs.message.UUID.value)
  return value_.GetNoArena();
}
inline void UUID::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qgs.message.UUID.value)
}
#if LANG_CXX11
inline void UUID::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qgs.message.UUID.value)
}
#endif
inline void UUID::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qgs.message.UUID.value)
}
inline void UUID::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qgs.message.UUID.value)
}
inline ::std::string* UUID::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:qgs.message.UUID.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UUID::release_value() {
  // @@protoc_insertion_point(field_release:qgs.message.UUID.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UUID::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:qgs.message.UUID.value)
}

// -------------------------------------------------------------------

// Request_GetQuoteRequest

// required bytes report = 1;
inline bool Request_GetQuoteRequest::has_report() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_GetQuoteRequest::set_has_report() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_GetQuoteRequest::clear_has_report() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_GetQuoteRequest::clear_report() {
  report_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_report();
}
inline const ::std::string& Request_GetQuoteRequest::report() const {
  // @@protoc_insertion_point(field_get:qgs.message.Request.GetQuoteRequest.report)
  return report_.GetNoArena();
}
inline void Request_GetQuoteRequest::set_report(const ::std::string& value) {
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qgs.message.Request.GetQuoteRequest.report)
}
#if LANG_CXX11
inline void Request_GetQuoteRequest::set_report(::std::string&& value) {
  set_has_report();
  report_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qgs.message.Request.GetQuoteRequest.report)
}
#endif
inline void Request_GetQuoteRequest::set_report(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qgs.message.Request.GetQuoteRequest.report)
}
inline void Request_GetQuoteRequest::set_report(const void* value, size_t size) {
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qgs.message.Request.GetQuoteRequest.report)
}
inline ::std::string* Request_GetQuoteRequest::mutable_report() {
  set_has_report();
  // @@protoc_insertion_point(field_mutable:qgs.message.Request.GetQuoteRequest.report)
  return report_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_GetQuoteRequest::release_report() {
  // @@protoc_insertion_point(field_release:qgs.message.Request.GetQuoteRequest.report)
  if (!has_report()) {
    return NULL;
  }
  clear_has_report();
  return report_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_GetQuoteRequest::set_allocated_report(::std::string* report) {
  if (report != NULL) {
    set_has_report();
  } else {
    clear_has_report();
  }
  report_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), report);
  // @@protoc_insertion_point(field_set_allocated:qgs.message.Request.GetQuoteRequest.report)
}

// repeated .qgs.message.UUID id_list = 2;
inline int Request_GetQuoteRequest::id_list_size() const {
  return id_list_.size();
}
inline void Request_GetQuoteRequest::clear_id_list() {
  id_list_.Clear();
}
inline ::qgs::message::UUID* Request_GetQuoteRequest::mutable_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:qgs.message.Request.GetQuoteRequest.id_list)
  return id_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::qgs::message::UUID >*
Request_GetQuoteRequest::mutable_id_list() {
  // @@protoc_insertion_point(field_mutable_list:qgs.message.Request.GetQuoteRequest.id_list)
  return &id_list_;
}
inline const ::qgs::message::UUID& Request_GetQuoteRequest::id_list(int index) const {
  // @@protoc_insertion_point(field_get:qgs.message.Request.GetQuoteRequest.id_list)
  return id_list_.Get(index);
}
inline ::qgs::message::UUID* Request_GetQuoteRequest::add_id_list() {
  // @@protoc_insertion_point(field_add:qgs.message.Request.GetQuoteRequest.id_list)
  return id_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::qgs::message::UUID >&
Request_GetQuoteRequest::id_list() const {
  // @@protoc_insertion_point(field_list:qgs.message.Request.GetQuoteRequest.id_list)
  return id_list_;
}

// -------------------------------------------------------------------

// Request

// required uint32 type = 1;
inline bool Request::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Request::type() const {
  // @@protoc_insertion_point(field_get:qgs.message.Request.type)
  return type_;
}
inline void Request::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:qgs.message.Request.type)
}

// optional .qgs.message.Request.GetQuoteRequest getQuoteRequest = 2;
inline bool Request::has_getquoterequest() const {
  return msg_case() == kGetQuoteRequest;
}
inline void Request::set_has_getquoterequest() {
  _oneof_case_[0] = kGetQuoteRequest;
}
inline void Request::clear_getquoterequest() {
  if (has_getquoterequest()) {
    delete msg_.getquoterequest_;
    clear_has_msg();
  }
}
inline const ::qgs::message::Request_GetQuoteRequest& Request::_internal_getquoterequest() const {
  return *msg_.getquoterequest_;
}
inline ::qgs::message::Request_GetQuoteRequest* Request::release_getquoterequest() {
  // @@protoc_insertion_point(field_release:qgs.message.Request.getQuoteRequest)
  if (has_getquoterequest()) {
    clear_has_msg();
      ::qgs::message::Request_GetQuoteRequest* temp = msg_.getquoterequest_;
    msg_.getquoterequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::qgs::message::Request_GetQuoteRequest& Request::getquoterequest() const {
  // @@protoc_insertion_point(field_get:qgs.message.Request.getQuoteRequest)
  return has_getquoterequest()
      ? *msg_.getquoterequest_
      : *reinterpret_cast< ::qgs::message::Request_GetQuoteRequest*>(&::qgs::message::_Request_GetQuoteRequest_default_instance_);
}
inline ::qgs::message::Request_GetQuoteRequest* Request::mutable_getquoterequest() {
  if (!has_getquoterequest()) {
    clear_msg();
    set_has_getquoterequest();
    msg_.getquoterequest_ = CreateMaybeMessage< ::qgs::message::Request_GetQuoteRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:qgs.message.Request.getQuoteRequest)
  return msg_.getquoterequest_;
}

inline bool Request::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void Request::clear_has_msg() {
  _oneof_case_[0] = MSG_NOT_SET;
}
inline Request::MsgCase Request::msg_case() const {
  return Request::MsgCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Response_GetQuoteResponse

// required uint32 error_code = 1 [default = 1];
inline bool Response_GetQuoteResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response_GetQuoteResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response_GetQuoteResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response_GetQuoteResponse::clear_error_code() {
  error_code_ = 1u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 Response_GetQuoteResponse::error_code() const {
  // @@protoc_insertion_point(field_get:qgs.message.Response.GetQuoteResponse.error_code)
  return error_code_;
}
inline void Response_GetQuoteResponse::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:qgs.message.Response.GetQuoteResponse.error_code)
}

// optional .qgs.message.UUID selected_id = 2;
inline bool Response_GetQuoteResponse::has_selected_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_GetQuoteResponse::set_has_selected_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_GetQuoteResponse::clear_has_selected_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_GetQuoteResponse::clear_selected_id() {
  if (selected_id_ != NULL) selected_id_->Clear();
  clear_has_selected_id();
}
inline const ::qgs::message::UUID& Response_GetQuoteResponse::_internal_selected_id() const {
  return *selected_id_;
}
inline const ::qgs::message::UUID& Response_GetQuoteResponse::selected_id() const {
  const ::qgs::message::UUID* p = selected_id_;
  // @@protoc_insertion_point(field_get:qgs.message.Response.GetQuoteResponse.selected_id)
  return p != NULL ? *p : *reinterpret_cast<const ::qgs::message::UUID*>(
      &::qgs::message::_UUID_default_instance_);
}
inline ::qgs::message::UUID* Response_GetQuoteResponse::release_selected_id() {
  // @@protoc_insertion_point(field_release:qgs.message.Response.GetQuoteResponse.selected_id)
  clear_has_selected_id();
  ::qgs::message::UUID* temp = selected_id_;
  selected_id_ = NULL;
  return temp;
}
inline ::qgs::message::UUID* Response_GetQuoteResponse::mutable_selected_id() {
  set_has_selected_id();
  if (selected_id_ == NULL) {
    auto* p = CreateMaybeMessage<::qgs::message::UUID>(GetArenaNoVirtual());
    selected_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:qgs.message.Response.GetQuoteResponse.selected_id)
  return selected_id_;
}
inline void Response_GetQuoteResponse::set_allocated_selected_id(::qgs::message::UUID* selected_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete selected_id_;
  }
  if (selected_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      selected_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selected_id, submessage_arena);
    }
    set_has_selected_id();
  } else {
    clear_has_selected_id();
  }
  selected_id_ = selected_id;
  // @@protoc_insertion_point(field_set_allocated:qgs.message.Response.GetQuoteResponse.selected_id)
}

// optional bytes quote = 3;
inline bool Response_GetQuoteResponse::has_quote() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_GetQuoteResponse::set_has_quote() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_GetQuoteResponse::clear_has_quote() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_GetQuoteResponse::clear_quote() {
  quote_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_quote();
}
inline const ::std::string& Response_GetQuoteResponse::quote() const {
  // @@protoc_insertion_point(field_get:qgs.message.Response.GetQuoteResponse.quote)
  return quote_.GetNoArena();
}
inline void Response_GetQuoteResponse::set_quote(const ::std::string& value) {
  set_has_quote();
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qgs.message.Response.GetQuoteResponse.quote)
}
#if LANG_CXX11
inline void Response_GetQuoteResponse::set_quote(::std::string&& value) {
  set_has_quote();
  quote_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qgs.message.Response.GetQuoteResponse.quote)
}
#endif
inline void Response_GetQuoteResponse::set_quote(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_quote();
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qgs.message.Response.GetQuoteResponse.quote)
}
inline void Response_GetQuoteResponse::set_quote(const void* value, size_t size) {
  set_has_quote();
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qgs.message.Response.GetQuoteResponse.quote)
}
inline ::std::string* Response_GetQuoteResponse::mutable_quote() {
  set_has_quote();
  // @@protoc_insertion_point(field_mutable:qgs.message.Response.GetQuoteResponse.quote)
  return quote_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_GetQuoteResponse::release_quote() {
  // @@protoc_insertion_point(field_release:qgs.message.Response.GetQuoteResponse.quote)
  if (!has_quote()) {
    return NULL;
  }
  clear_has_quote();
  return quote_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_GetQuoteResponse::set_allocated_quote(::std::string* quote) {
  if (quote != NULL) {
    set_has_quote();
  } else {
    clear_has_quote();
  }
  quote_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quote);
  // @@protoc_insertion_point(field_set_allocated:qgs.message.Response.GetQuoteResponse.quote)
}

// -------------------------------------------------------------------

// Response

// required uint32 type = 1;
inline bool Response::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Response::type() const {
  // @@protoc_insertion_point(field_get:qgs.message.Response.type)
  return type_;
}
inline void Response::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:qgs.message.Response.type)
}

// optional .qgs.message.Response.GetQuoteResponse getQuoteResponse = 2;
inline bool Response::has_getquoteresponse() const {
  return msg_case() == kGetQuoteResponse;
}
inline void Response::set_has_getquoteresponse() {
  _oneof_case_[0] = kGetQuoteResponse;
}
inline void Response::clear_getquoteresponse() {
  if (has_getquoteresponse()) {
    delete msg_.getquoteresponse_;
    clear_has_msg();
  }
}
inline const ::qgs::message::Response_GetQuoteResponse& Response::_internal_getquoteresponse() const {
  return *msg_.getquoteresponse_;
}
inline ::qgs::message::Response_GetQuoteResponse* Response::release_getquoteresponse() {
  // @@protoc_insertion_point(field_release:qgs.message.Response.getQuoteResponse)
  if (has_getquoteresponse()) {
    clear_has_msg();
      ::qgs::message::Response_GetQuoteResponse* temp = msg_.getquoteresponse_;
    msg_.getquoteresponse_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::qgs::message::Response_GetQuoteResponse& Response::getquoteresponse() const {
  // @@protoc_insertion_point(field_get:qgs.message.Response.getQuoteResponse)
  return has_getquoteresponse()
      ? *msg_.getquoteresponse_
      : *reinterpret_cast< ::qgs::message::Response_GetQuoteResponse*>(&::qgs::message::_Response_GetQuoteResponse_default_instance_);
}
inline ::qgs::message::Response_GetQuoteResponse* Response::mutable_getquoteresponse() {
  if (!has_getquoteresponse()) {
    clear_msg();
    set_has_getquoteresponse();
    msg_.getquoteresponse_ = CreateMaybeMessage< ::qgs::message::Response_GetQuoteResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:qgs.message.Response.getQuoteResponse)
  return msg_.getquoteresponse_;
}

inline bool Response::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void Response::clear_has_msg() {
  _oneof_case_[0] = MSG_NOT_SET;
}
inline Response::MsgCase Response::msg_case() const {
  return Response::MsgCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace qgs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_qgs_2emessage_2eproto
